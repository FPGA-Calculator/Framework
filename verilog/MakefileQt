######################################################################
#
# DESCRIPTION: Verilator build for Qt framework
#
# NOTE: VERILATOR_ROOT either needs to be defined, or the default install
#       folder /usr/local/share/verilator will be used to copy include
#       files from it.
#
# NOTE: Qt build needs "#include <array>" to be added to verilated.h
#       and this makefile does it after copying the include files over.
#
######################################################################
# Set up variables

# If $VERILATOR_ROOT isn't in the environment, we assume it is part of a
# package install, and verilator is in your path. Otherwise find the
# binary relative to $VERILATOR_ROOT (such as when inside the git sources).
ifeq ($(VERILATOR_ROOT),)
# If $VERILATOR_ROOT isn't in the environment, assume the default install
# location. We need that location to copy the include files from it.
VERILATOR_ROOT = /usr/local/share/verilator
VERILATOR = verilator
VERILATOR_COVERAGE = verilator_coverage
else
export VERILATOR_ROOT
VERILATOR = $(VERILATOR_ROOT)/bin/verilator
VERILATOR_COVERAGE = $(VERILATOR_ROOT)/bin/verilator_coverage
endif

# Generate C++
VERILATOR_FLAGS += -cc
# Generate makefile dependencies (not shown as complicates the Makefile)
#VERILATOR_FLAGS += -MMD
# Optimize
VERILATOR_FLAGS += -Os -x-assign 0
# Warn abount lint issues; may not want this on less solid designs
VERILATOR_FLAGS += -Wall
# Ignore end-of-line to facilitate building on Windows though WSL
VERILATOR_FLAGS += -Wno-EOFNEWLINE
# Make waveforms
#VERILATOR_FLAGS += --trace
# Check SystemVerilog assertions
VERILATOR_FLAGS += --assert
# Generate coverage analysis
#VERILATOR_FLAGS += --coverage
# Run Verilator in debug mode
#VERILATOR_FLAGS += --debug
# Add this trace to get a backtrace in gdb
#VERILATOR_FLAGS += --gdbbt

# Input files for Verilator
VERILATOR_INPUT = -f input.vc top.sv controller.sv debounce.sv async_rom.sv lcd.sv sim_main.cpp

######################################################################
# Copy the include files from the verilator install location so they can be used
# by the Qt build. Also, prepend one include statement since Qt requires it at the moment.

default: copy-includes correct-verilated compile

copy-includes:
	@echo "Copy verilator include files from" $(VERILATOR_ROOT)/include
	@cp -R $(VERILATOR_ROOT)/include .

correct-verilated:
	@echo "Prepend '#include <array>' to include/verilated.h"
	@sed -i '0,/^/s//#include <array>\n/' include/verilated.h

compile:
	@echo "Create verilated sources"
	$(VERILATOR) $(VERILATOR_FLAGS) -DQT=1 $(VERILATOR_INPUT)

######################################################################
# Other targets

show-config:
	$(VERILATOR) -V

maintainer-copy::
clean mostlyclean distclean maintainer-clean::
	-rm -rf include obj_dir logs *.log *.dmp *.vpd coverage.dat core
